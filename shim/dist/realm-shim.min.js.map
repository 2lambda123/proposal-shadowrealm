{"version":3,"file":"realm-shim.min.js","sources":["../src/evaluators.js","../src/accessors.js","../src/functions.js","../src/sanitize.js","../src/context.js","../src/stdlib.js","../src/intrinsics.js","../src/realm.js","../src/commons.js","../src/handler.js"],"sourcesContent":["// Portions adapted from V8 - Copyright 2016 the V8 project authors.\n// https://github.com/v8/v8/blob/master/src/builtins/builtins-function.cc\n\nimport { defineProperty, setPrototypeOf } from './commons';\nimport { Handler } from './handler';\n\nfunction buildOptimizer(constants) {\n  if (!Array.isArray(constants)) {\n    return '';\n  }\n  if (constants.contains('eval')) throw new Error();\n\n  return `const {${constants.join(',')}} = arguments[0];`;\n}\n\nexport function getScopedEvaluatorFactory(unsafeRec, constants) {\n  const { unsafeFunction } = unsafeRec;\n\n  const optimizer = buildOptimizer(constants);\n\n  // Create a function in sloppy mode that returns\n  // a function in strict mode.\n  return unsafeFunction(`\n    with (arguments[0]) {\n      ${optimizer}\n      return function() {\n        'use strict';\n        return eval(arguments[0]);\n      };\n    }\n  `);\n}\n\nexport function getSafeEvaluator(realmRec) {\n  const { unsafeRec, globalObject } = realmRec;\n\n  // This proxy has several functions:\n  // 1. works with the sentinel to alternate between direct eval and confined eval.\n  // 2. shadows all properties of the hidden global by declaring them as undefined.\n  // 3. resolves all existing properties of the sandboxed global.\n  const handler = new Handler(unsafeRec);\n  const proxy = new Proxy(globalObject, handler);\n\n  const scopedEvaluator = unsafeRec.scopedEvaluatorFactory(proxy);\n\n  // We use the the concise method syntax to create an eval without a\n  // [[Construct]] behavior (such that the invocation \"new eval()\" throws\n  // TypeError: eval is not a constructor\"), but which still accepts a 'this'\n  // binding.\n  const evaluator = {\n    eval(src) {\n      handler.useUnsafeEvaluator = true;\n      try {\n        // Ensure that \"this\" resolves to the secure global.\n        return scopedEvaluator.call(globalObject, src);\n      } finally {\n        // belt and suspenders: the proxy switches this off immediately after\n        // the first access, but just in case we clear it here too\n        handler.useUnsafeEvaluator = false;\n      }\n    }\n  }.eval;\n\n  // Ensure that eval from any compartment in a root realm is an\n  // instance of Function in any compartment of the same root realm.\n  const { unsafeGlobal, unsafeFunction } = unsafeRec;\n  setPrototypeOf(evaluator, unsafeFunction.prototype);\n\n  defineProperty(evaluator, unsafeGlobal.Symbol.toStringTag, {\n    value: 'function eval() { [shim code] }',\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n  return evaluator;\n}\n\n/**\n * A safe version of the native Function which relies on\n * the safety of evalEvaluator for confinement.\n */\nexport function getFunctionEvaluator(unsafeFunction, unsafeGlobal, safeEvaluator) {\n  const SafeFunction = function Function(...params) {\n    const functionBody = `${params.pop()}` || '';\n    let functionParams = `${params.join(',')}`;\n\n    // Is this a real functionBody, or is someone attempting an injection\n    // attack? This will throw a SyntaxError if the string is not actually a\n    // function body. We coerce the body into a real string above to prevent\n    // someone from passing an object with a toString() that returns a safe\n    // string the first time, but an evil string the second time.\n    new unsafeFunction(functionBody); // eslint-disable-line\n\n    if (functionParams.includes(')')) {\n      // If the formal parameters string include ) - an illegal\n      // character - it may make the combined function expression\n      // compile. We avoid this problem by checking for this early on.\n      throw new SyntaxError('Function arg string contains parenthesis');\n    }\n\n    if (functionParams.length > 0) {\n      // If the formal parameters include an unbalanced block comment, the\n      // function must be rejected. Since JavaScript does not allow nested\n      // comments we can include a trailing block comment to catch this.\n      functionParams += '\\n/*``*/';\n    }\n\n    const src = `(function(${functionParams}){\\n${functionBody}\\n})`;\n\n    return safeEvaluator(src);\n  };\n\n  // Ensure that Function from any compartment in a root realm can be used\n  // with instance checks in any compartment of the same root realm.\n  setPrototypeOf(SafeFunction, unsafeFunction.prototype);\n\n  // Ensure that any function created in any compartment in a root realm is an\n  // instance of Function in any compartment of the same root ralm.\n  defineProperty(SafeFunction, 'prototype', { value: unsafeFunction.prototype });\n\n  // Provide a custom output without overwriting the Function.prototype.toString\n  // which is called by some libraries.\n  defineProperty(SafeFunction, unsafeGlobal.Symbol.toStringTag, {\n    value: 'function Function() { [shim code] }',\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n  return SafeFunction;\n}\n","// Adapted from SES/Caja - Copyright (C) 2011 Google Inc.\n// https://github.com/google/caja/blob/master/src/com/google/caja/ses/startSES.js\n// https://github.com/google/caja/blob/master/src/com/google/caja/ses/repairES5.js\n\nimport {\n  getPrototypeOf,\n  defineProperty,\n  defineProperties,\n  getOwnPropertyDescriptor\n} from './commons';\n\n/**\n * Replace the legacy accessors of Object to comply with strict mode\n * and ES2016 semantics, we do this by redefining them while in 'use strict'\n * https://tc39.github.io/ecma262/#sec-object.prototype.__defineGetter__\n */\nexport function repairAccessors(unsafeRec) {\n  const { unsafeGlobal: g } = unsafeRec;\n\n  defineProperties(g.Object.prototype, {\n    __defineGetter__: {\n      value(prop, func) {\n        return defineProperty(this, prop, {\n          get: func,\n          enumerable: true,\n          configurable: true\n        });\n      }\n    },\n    __defineSetter__: {\n      value(prop, func) {\n        return defineProperty(this, prop, {\n          set: func,\n          enumerable: true,\n          configurable: true\n        });\n      }\n    },\n    __lookupGetter__: {\n      value(prop) {\n        let base = this;\n        let desc;\n        while (base && !(desc = getOwnPropertyDescriptor(base, prop))) {\n          base = getPrototypeOf(base);\n        }\n        return desc && desc.get;\n      }\n    },\n    __lookupSetter__: {\n      value(prop) {\n        let base = this;\n        let desc;\n        while (base && !(desc = getOwnPropertyDescriptor(base, prop))) {\n          base = getPrototypeOf(base);\n        }\n        return desc && desc.set;\n      }\n    }\n  });\n}\n","// Adapted from SES/Caja\n// Copyright (C) 2011 Google Inc.\n// https://github.com/google/caja/blob/master/src/com/google/caja/ses/startSES.js\n// https://github.com/google/caja/blob/master/src/com/google/caja/ses/repairES5.js\n\nimport { defineProperty, defineProperties, getPrototypeOf, setPrototypeOf } from './commons';\n\n/**\n * The process to repair constructors:\n * 1. Obtain the prototype from an instance\n * 2. Create a substitute noop constructor\n * 3. Replace its prototype property with the original prototype\n * 4. Replace its prototype property's constructor with itself\n * 5. Replace its [[Prototype]] slot with the noop constructor of Function\n */\nfunction repairFunction(unsafeRec, functionName, functionDecl) {\n  const { unsafeEval, unsafeFunction, unsafeGlobal } = unsafeRec;\n\n  let FunctionInstance;\n  try {\n    FunctionInstance = unsafeEval(`(${functionDecl}(){})`);\n  } catch (e) {\n    if (!(e instanceof unsafeGlobal.SyntaxError)) {\n      // Re-throw\n      throw e;\n    }\n    // Prevent failure on platforms where generators are not supported.\n    return;\n  }\n  const FunctionPrototype = getPrototypeOf(FunctionInstance);\n\n  // Block evaluation of source when calling constructor on the prototype of functions.\n  const TamedFunction = unsafeFunction('throw new Error(\"Not available\");');\n\n  defineProperties(TamedFunction, {\n    name: {\n      value: functionName\n    },\n    prototype: {\n      value: FunctionPrototype\n    }\n  });\n  defineProperty(FunctionPrototype, 'constructor', { value: TamedFunction });\n\n  // Ensures that all functions meet \"instanceof Function\" in a realm.\n  setPrototypeOf(TamedFunction, unsafeFunction.prototype.constructor);\n  // todo: why does this work? it used to be done only for 'Function', but by\n  // doing it on all types, it should set up a circular prototype chain\n}\n\n/**\n * This block replaces the original Function constructor, and the original\n * %GeneratorFunction% %AsyncFunction% and %AsyncGeneratorFunction%, with\n * safe replacements that preserve SES confinement. After this block is done,\n * the originals should no longer be reachable.\n */\nexport function repairFunctions(unsafeRec) {\n  // Here, the order of operation is important: Function needs to be\n  // repaired first since the other constructors need it.\n  repairFunction(unsafeRec, 'Function', 'function');\n  repairFunction(unsafeRec, 'GeneratorFunction', 'function*');\n  repairFunction(unsafeRec, 'AsyncFunction', 'async function');\n  repairFunction(unsafeRec, 'AsyncGeneratorFunction', 'async function*');\n}\n","import { repairAccessors } from './accessors';\nimport { repairFunctions } from './functions';\n\n// Sanitizing ensures that neither the legacy\n// accessors nor the function constructors can be\n// used to escape the confinement of the evaluators\n// to execute in the context.\n\nexport function sanitize(unsafeRec) {\n  repairAccessors(unsafeRec);\n  repairFunctions(unsafeRec);\n}\n","import { getScopedEvaluatorFactory } from './evaluators';\nimport { sanitize } from './sanitize';\n\n// Detection used in RollupJS.\nconst isNode = typeof exports === 'object' && typeof module !== 'undefined';\nconst vm = isNode ? require('vm') : undefined;\n\nconst contextRecSrc = '({ global: this, eval, Function })';\n\n// The contextRec is shim-specific. It acts as the mechanism\n// to obtain a fresh set of intrinsics together with their\n// associated eval and Function evaluators. This association\n// must be respected since the evaluators are imposing a\n// set of intrinsics, aka the \"undeniables\".\n\nfunction createNodeContext() {\n  const context = vm.runInNewContext(contextRecSrc);\n  return context;\n}\n\nfunction createBrowserContext() {\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n\n  document.body.appendChild(iframe);\n  const context = iframe.contentWindow.eval(contextRecSrc);\n\n  return context;\n}\n\nconst createContext = isNode ? createNodeContext : createBrowserContext;\n\nexport function createUnsafeRec(context) {\n  if (context === undefined) {\n    context = createContext();\n  }\n\n  const unsafeRec = {\n    unsafeGlobal: context.global,\n    unsafeEval: context.eval,\n    unsafeFunction: context.Function\n  };\n\n  // Create the evaluator factory that will generate the evaluators\n  // for each compartment realm.\n  unsafeRec.scopedEvaluatorFactory = getScopedEvaluatorFactory(unsafeRec);\n\n  sanitize(unsafeRec);\n  return unsafeRec;\n}\n\n// The current context is the context where the\n// Realm shim is being parsed and executed.\nfunction getCurrentContext() {\n  return (0, eval)(contextRecSrc);\n}\n\nexport function getCurrentUnsafeRec() {\n  const context = getCurrentContext();\n  return createUnsafeRec(context);\n}\n","export function getStdLib(intrinsics, safeEvaluators) {\n  const descriptors = {\n    // *** 18.1 Value Properties of the Global Object\n\n    Infinity: { value: Infinity },\n    NaN: { value: NaN },\n    undefined: { value: undefined }\n  };\n\n  // All the following stdlib items have the same name on both our intrinsics\n  // object and on the global object. Unlike Infinity/NaN/undefined, these\n  // should all be writable and configurable.\n  const namedIntrinsics = [\n    // *** 18.2 Function Properties of the Global Object\n\n    // 'eval', // comes from safeEvaluators instead\n    'isFinite',\n    'isNaN',\n    'parseFloat',\n    'parseInt',\n\n    'decodeURI',\n    'decodeURIComponent',\n    'encodeURI',\n    'encodeURIComponent',\n\n    // *** 18.3 Constructor Properties of the Global Object\n\n    'Array',\n    'ArrayBuffer',\n    'Boolean',\n    'DataView',\n    'Date',\n    'Error',\n    'EvalError',\n    'Float32Array',\n    'Float64Array',\n    // 'Function', // comes from safeEvaluators instead\n    'Int8Array',\n    'Int16Array',\n    'Int32Array',\n    'Map',\n    'Number',\n    'Object',\n    'Promise',\n    'Proxy',\n    'RangeError',\n    'ReferenceError',\n    'RegExp',\n    'Set',\n    // 'SharedArrayBuffer' // Deprecated on Jan 5, 2018\n    'String',\n    'Symbol',\n    'SyntaxError',\n    'TypeError',\n    'Uint8Array',\n    'Uint8ClampedArray',\n    'Uint16Array',\n    'Uint32Array',\n    'URIError',\n    'WeakMap',\n    'WeakSet',\n\n    // *** 18.4 Other Properties of the Global Object\n\n    // 'Atomics', // Deprecated on Jan 5, 2018\n    'JSON',\n    'Math',\n    'Reflect',\n\n    // *** Annex B\n\n    'escape',\n    'unescape',\n\n    // *** ECMA-402\n\n    'Intl',\n\n    // *** ESNext\n\n    'Realm'\n  ];\n\n  for (const name of namedIntrinsics) {\n    descriptors[name] = {\n      value: intrinsics[name],\n      writable: true,\n      configurable: true\n    };\n  }\n\n  // add the safe named evaluators\n\n  // *** 18.2 Function Properties of the Global Object\n  descriptors.eval = {\n    value: safeEvaluators.eval,\n    writable: true,\n    configurable: true // todo: maybe make this non-configurable\n  };\n\n  // *** 18.3 Constructor Properties of the Global Object\n  descriptors.Function = {\n    value: safeEvaluators.Function,\n    writable: true,\n    configurable: true\n  };\n\n  // TODO: we changed eval to be configurable along with everything else,\n  // should we change it back to honor this earlier comment?\n  // // Make eval writable to allow proxy to return a different\n  // // value, and leave it non-configurable to prevent userland\n  // // from changing its descriptor and breaking an invariant.\n\n  // we need to prevent the user from manipulating the 'eval' binding while\n  // simultaneously enabling the proxy to *switch* the 'eval' binding\n\n  return descriptors;\n}\n","import { getPrototypeOf } from './commons';\n\n/**\n * Get the intrinsics from Table 7 & Annex B\n * Named intrinsics: available as data properties of the global object.\n * Anonymous intrinsics: not otherwise reachable by own property name traversal.\n *\n * https://tc39.github.io/ecma262/#table-7\n * https://tc39.github.io/ecma262/#table-73\n */\nexport function getSharedIntrinsics(contextGlobal) {\n  const g = contextGlobal;\n\n  // the .constructor properties on evaluator intrinsics should already be\n  // fixed by this point, due to the sanitize() call inside createUnsafeRec()\n\n  // Anonymous intrinsics.\n\n  const SymbolIterator = g.Symbol.iterator;\n\n  const ArrayIteratorInstance = new g.Array()[SymbolIterator]();\n  const ArrayIteratorPrototype = getPrototypeOf(ArrayIteratorInstance);\n  const IteratorPrototype = getPrototypeOf(ArrayIteratorPrototype);\n\n  // Ensure parsing doesn't fail on platforms that don't support Async Functions.\n  let AsyncFunctionInstance;\n  try {\n    AsyncFunctionInstance = g.eval('(async function(){})');\n  } catch (e) {\n    if (!(e instanceof g.SyntaxError)) {\n      // Re-throw\n      throw e;\n    }\n  }\n\n  // const AsyncFunction = AsyncFunctionInstance && AsyncFunctionInstance.constructor;\n  const AsyncFunctionPrototype = AsyncFunctionInstance && getPrototypeOf(AsyncFunctionInstance);\n\n  // Ensure parsing doesn't fail on platforms that don't support Generator Functions.\n  let GeneratorFunctionInstance;\n  try {\n    GeneratorFunctionInstance = g.eval('(function*(){})');\n  } catch (e) {\n    if (!(e instanceof g.SyntaxError)) {\n      // Re-throw\n      throw e;\n    }\n  }\n  // const GeneratorFunction = GeneratorFunctionInstance && GeneratorFunctionInstance.constructor;\n  const Generator = GeneratorFunctionInstance && getPrototypeOf(GeneratorFunctionInstance);\n  const GeneratorPrototype = GeneratorFunctionInstance && Generator.prototype;\n\n  // Ensure parsing doesn't fail on platforms that don't support Async Generator Functions.\n  let AsyncGeneratorFunctionInstance;\n  try {\n    AsyncGeneratorFunctionInstance = g.eval('(async function*(){})');\n  } catch (e) {\n    if (!(e instanceof g.SyntaxError)) {\n      // Re-throw\n      throw e;\n    }\n  }\n  // const AsyncGeneratorFunction =\n  //  AsyncGeneratorFunctionInstance && AsyncGeneratorFunctionInstance.constructor;\n  const AsyncGenerator =\n    AsyncGeneratorFunctionInstance && getPrototypeOf(AsyncGeneratorFunctionInstance);\n  const AsyncGeneratorPrototype = AsyncGeneratorFunctionInstance && AsyncGenerator.prototype;\n\n  const AsyncIteratorPrototype =\n    AsyncGeneratorFunctionInstance && getPrototypeOf(AsyncGeneratorPrototype);\n  // const AsyncFromSyncIteratorPrototype = undefined; // Not reacheable.\n\n  const MapIteratorObject = new g.Map()[SymbolIterator]();\n  const MapIteratorPrototype = getPrototypeOf(MapIteratorObject);\n\n  const SetIteratorObject = new g.Set()[SymbolIterator]();\n  const SetIteratorPrototype = getPrototypeOf(SetIteratorObject);\n\n  const StringIteratorObject = new g.String()[SymbolIterator]();\n  const StringIteratorPrototype = getPrototypeOf(StringIteratorObject);\n\n  const ThrowTypeError = g.eval(\n    '(function () { \"use strict\"; return Object.getOwnPropertyDescriptor(arguments, \"callee\").get; })()'\n  );\n\n  const TypedArray = getPrototypeOf(g.Int8Array);\n  const TypedArrayPrototype = TypedArray.prototype;\n\n  // Named intrinsics\n\n  const sharedIntrinsics = {\n    // *** Table 7\n\n    // %Array%\n    Array: g.Array,\n    // %ArrayBuffer%\n    ArrayBuffer: g.ArrayBuffer,\n    // %ArrayBufferPrototype%\n    ArrayBufferPrototype: g.ArrayBuffer.prototype,\n    // %ArrayIteratorPrototype%\n    ArrayIteratorPrototype,\n    // %ArrayPrototype%\n    ArrayPrototype: g.Array.prototype,\n    // %ArrayProto_entries%\n    ArrayProto_entries: g.Array.prototype.entries,\n    // %ArrayProto_foreach%\n    ArrayProto_foreach: g.Array.prototype.forEach,\n    // %ArrayProto_keys%\n    ArrayProto_keys: g.Array.prototype.forEach,\n    // %ArrayProto_values%\n    ArrayProto_values: g.Array.prototype.values,\n    // %AsyncFromSyncIteratorPrototype%\n    // AsyncFromSyncIteratorPrototype, // Not reachable\n    // %AsyncFunctionPrototype%\n    AsyncFunctionPrototype,\n    // %AsyncGeneratorPrototype%\n    AsyncGeneratorPrototype,\n    // %AsyncIteratorPrototype%\n    AsyncIteratorPrototype,\n    // %Atomics%\n    // Atomics: g.Atomics, // Deprecated on Jan 5, 2018\n    // %Boolean%\n    Boolean: g.Boolean,\n    // %BooleanPrototype%\n    BooleanPrototype: g.Boolean.prototype,\n    // %DataView%\n    DataView: g.DataView,\n    // %DataViewPrototype%\n    DataViewPrototype: g.DataView.prototype,\n    // %Date%\n    Date: g.Date,\n    // %DatePrototype%\n    DatePrototype: g.Date.prototype,\n    // %decodeURI%\n    decodeURI: g.decodeURI,\n    // %decodeURIComponent%\n    decodeURIComponent: g.decodeURIComponent,\n    // %encodeURI%\n    encodeURI: g.encodeURI,\n    // %encodeURIComponent%\n    encodeURIComponent: g.encodeURIComponent,\n    // %Error%\n    Error: g.Error,\n    // %ErrorPrototype%\n    ErrorPrototype: g.Error.prototype,\n    // %EvalError%\n    EvalError: g.EvalError,\n    // %EvalErrorPrototype%\n    EvalErrorPrototype: g.EvalError.prototype,\n    // %Float32Array%\n    Float32Array: g.Float32Array,\n    // %Float32ArrayPrototype%\n    Float32ArrayPrototype: g.Float32Array.prototype,\n    // %Float64Array%\n    Float64Array: g.Float64Array,\n    // %Float64ArrayPrototype%\n    Float64ArrayPrototype: g.Float64Array.prototype,\n    // %FunctionPrototype%\n    FunctionPrototype: g.Function.prototype,\n    // %GeneratorPrototype%\n    GeneratorPrototype,\n    // %Int8Array%\n    Int8Array: g.Int8Array,\n    // %Int8ArrayPrototype%\n    Int8ArrayPrototype: g.Int8Array.prototype,\n    // %Int16Array%\n    Int16Array: g.Int16Array,\n    // %Int16ArrayPrototype%,\n    Int16ArrayPrototype: g.Int16Array.prototype,\n    // %Int32Array%\n    Int32Array: g.Int32Array,\n    // %Int32ArrayPrototype%\n    Int32ArrayPrototype: g.Int32Array.prototype,\n    // %isFinite%\n    isFinite: g.isFinite,\n    // %isNaN%\n    isNaN: g.isNaN,\n    // %IteratorPrototype%\n    IteratorPrototype,\n    // %JSON%\n    JSON: g.JSON,\n    // %JSONParse%\n    JSONParse: g.JSON.parse,\n    // %Map%\n    Map: g.Map,\n    // %MapIteratorPrototype%\n    MapIteratorPrototype,\n    // %MapPrototype%\n    MapPrototype: g.Map.prototype,\n    // %Math%\n    Math: g.Math,\n    // %Number%\n    Number: g.Number,\n    // %NumberPrototype%\n    NumberPrototype: g.Number.prototype,\n    // %Object%\n    Object: g.Object,\n    // %ObjectPrototype%\n    ObjectPrototype: g.Object.prototype,\n    // %ObjProto_toString%\n    ObjProto_toString: g.Object.prototype.toString,\n    // %ObjProto_valueOf%\n    ObjProto_valueOf: g.Object.prototype.valueOf,\n    // %parseFloat%\n    parseFloat: g.parseFloat,\n    // %parseInt%\n    parseInt: g.parseInt,\n    // %Promise%\n    Promise: g.Promise,\n    // %Promise_all%\n    Promise_all: g.Promise.all,\n    // %Promise_reject%\n    Promise_reject: g.Promise.reject,\n    // %Promise_resolve%\n    Promise_resolve: g.Promise.resolve,\n    // %PromiseProto_then%\n    PromiseProto_then: g.Promise.prototype.then,\n    // %PromisePrototype%\n    PromisePrototype: g.Promise.prototype,\n    // %Proxy%\n    Proxy: g.Proxy,\n    // %RangeError%\n    RangeError: g.RangeError,\n    // %RangeErrorPrototype%\n    RangeErrorPrototype: g.RangeError.prototype,\n    // %ReferenceError%\n    ReferenceError: g.ReferenceError,\n    // %ReferenceErrorPrototype%\n    ReferenceErrorPrototype: g.ReferenceError.prototype,\n    // %Reflect%\n    Reflect: g.Reflect,\n    // %RegExp%\n    RegExp: g.RegExp,\n    // %RegExpPrototype%\n    RegExpPrototype: g.RegExp.prototype,\n    // %Set%\n    Set: g.Set,\n    // %SetIteratorPrototype%\n    SetIteratorPrototype,\n    // %SetPrototype%\n    SetPrototype: g.Set.prototype,\n    // %SharedArrayBuffer%\n    // SharedArrayBuffer // Deprecated on Jan 5, 2018\n    // %SharedArrayBufferPrototype%\n    // SharedArrayBufferPrototype // Deprecated on Jan 5, 2018\n    // %String%\n    String: g.String,\n    // %StringIteratorPrototype%\n    StringIteratorPrototype,\n    // %StringPrototype%\n    StringPrototype: g.String.prototype,\n    // %Symbol%\n    Symbol: g.Symbol,\n    // %SymbolPrototype%\n    SymbolPrototype: g.Symbol.prototype,\n    // %SyntaxError%\n    SyntaxError: g.SyntaxError,\n    // %SyntaxErrorPrototype%\n    SyntaxErrorPrototype: g.SyntaxError.prototype,\n    // %ThrowTypeError%\n    ThrowTypeError,\n    // %TypedArray%\n    TypedArray,\n    // %TypedArrayPrototype%\n    TypedArrayPrototype,\n    // %TypeError%\n    TypeError: g.TypeError,\n    // %TypeErrorPrototype%\n    TypeErrorPrototype: g.TypeError.prototype,\n    // %Uint8Array%\n    Uint8Array: g.Uint8Array,\n    // %Uint8ArrayPrototype%\n    Uint8ArrayPrototype: g.Uint8Array.prototype,\n    // %Uint8ClampedArray%\n    Uint8ClampedArray: g.Uint8ClampedArray,\n    // %Uint8ClampedArrayPrototype%\n    Uint8ClampedArrayPrototype: g.Uint8ClampedArray.prototype,\n    // %Uint16Array%\n    Uint16Array: g.Uint16Array,\n    // %Uint16ArrayPrototype%\n    Uint16ArrayPrototype: g.Uint16Array.prototype,\n    // %Uint32Array%\n    Uint32Array: g.Uint32Array,\n    // %Uint32ArrayPrototype%\n    Uint32ArrayPrototype: g.Uint32Array.prototype,\n    // %URIError%\n    URIError: g.URIError,\n    // %URIErrorPrototype%\n    URIErrorPrototype: g.URIError.prototype,\n    // %WeakMap%\n    WeakMap: g.WeakMap,\n    // %WeakMapPrototype%\n    WeakMapPrototype: g.WeakMap.prototype,\n    // %WeakSet%\n    WeakSet: g.WeakSet,\n    // %WeakSetPrototype%\n    WeakSetPrototype: g.WeakSet.prototype,\n\n    // *** Annex B\n\n    // %escape%\n    escape: g.escape,\n    // %unescape%\n    unescape: g.unescape,\n\n    // *** ECMA-402\n\n    Intl: g.Intl,\n\n    // *** ESNext.\n    // This is in sharedIntrinsics because there's only one Realm constructor\n    // per RootRealm even though there's one Realm instance per Realm.\n    // Compartments use the Realm constructor from their parent RootRealm.\n    Realm: g.Realm\n  };\n\n  // sharedIntrinsics are per RootRealm\n  return sharedIntrinsics;\n}\n","import { createUnsafeRec, getCurrentUnsafeRec } from './context';\nimport { getSafeEvaluator, getFunctionEvaluator } from './evaluators';\nimport { getStdLib } from './stdlib';\nimport { getSharedIntrinsics } from './intrinsics';\nimport { assign, create, defineProperty, defineProperties, getPrototypeOf } from './commons';\n\nconst Realm2RealmRec = new WeakMap();\nconst RealmProto2UnsafeRec = new WeakMap();\n\n// buildChildRealm is immediately turned into a string, and this function is\n// never referenced again, because it closes over the wrong intrinsics\n\nfunction buildChildRealm(BaseRealm) {\n  const errorConstructors = new Map([\n    ['EvalError', EvalError],\n    ['RangeError', RangeError],\n    ['ReferenceError', ReferenceError],\n    ['SyntaxError', SyntaxError],\n    ['TypeError', TypeError],\n    ['URIError', URIError]\n  ]);\n\n  // Like Realm.apply except that it catches anything thrown and rethrows it\n  // as an Error from this realm\n  function doAndWrapError(thunk) {\n    try {\n      return thunk();\n    } catch (err) {\n      if (Object(err) !== err) {\n        throw err;\n      }\n      let eName, eMessage;\n      try {\n        // The child environment might seek to use 'err' to reach the\n        // parent's intrinsics and corrupt them. `${err.name}` will cause\n        // string coercion of 'err.name'. If err.name is an object (probably\n        // a String of the parent Realm), the coercion uses\n        // err.name.toString(), which is under the control of the parent. If\n        // err.name were a primitive (e.g. a number), it would use\n        // Number.toString(err.name), using the child's version of Number\n        // (which the child could modify to capture its argument for later\n        // use), however primitives don't have properties like .prototype so\n        // they aren't useful for an attack.\n        eName = `${err.name}`;\n        eMessage = `${err.message}`;\n        // eName and eMessage are now child-realm primitive strings, and safe\n        // to expose\n      } catch (_) {\n        // if err.name.toString() throws, keep the (parent realm) Error away\n        // from the child\n        throw new Error('Something bad happened');\n      }\n      const ErrorConstructor = errorConstructors.get(eName) || Error;\n      throw new ErrorConstructor(eMessage);\n    }\n  }\n\n  const descs = Object.getOwnPropertyDescriptors(BaseRealm.prototype);\n\n  class Realm {\n    constructor(...args) {\n      return doAndWrapError(() => Reflect.construct(BaseRealm, args, Realm));\n    }\n    get intrinsics() {\n      return doAndWrapError(() => descs.intrinsics.get.apply(this));\n    }\n    get global() {\n      return doAndWrapError(() => descs.global.get.apply(this));\n    }\n    evaluate(...args) {\n      return doAndWrapError(() => descs.evaluate.value.apply(this, args));\n    }\n    static makeRootRealm() {\n      return new Realm();\n    }\n    static makeCompartment() {\n      return new Realm({\n        transform: 'inherit',\n        isDirectEval: 'inherit',\n        intrinsics: 'inherit'\n      });\n    }\n  }\n\n  Object.defineProperty(Realm.prototype, Symbol.toStringTag, {\n    value: 'function Realm() { [shim code] }',\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n\n  return Realm;\n}\n\nconst buildChildRealmString = `(${buildChildRealm})`;\n\nfunction createRealmFacade(unsafeRec, BaseRealm) {\n  const { unsafeEval, unsafeGlobal } = unsafeRec;\n\n  // The BaseRealm is the Realm class created by\n  // the shim. It's only valid for the context where\n  // it was parsed.\n\n  // The Realm facade is a lightwwight class built in the\n  // context a different context, that provide a fully\n  // functional Realm class using the intrisics\n  // of that context.\n\n  // This process is simplified becuase all methods\n  // and properties on a realm instance already return\n  // values using the intrinsics of the realm's context.\n\n  // Invoke the BaseRealm constructor with Realm as the prototype.\n  const Realm = unsafeEval(buildChildRealmString)(BaseRealm);\n  unsafeGlobal.Realm = Realm;\n  RealmProto2UnsafeRec.set(Realm.prototype, unsafeRec);\n}\n\nfunction getGlobalObject(intrinsics) {\n  return create(intrinsics.ObjectPrototype);\n}\n\nfunction createEvaluators(realmRec) {\n  // Divergence from specifications: the evaluators are tied to\n  // a global and they are tied to a realm and to the intrinsics\n  // of that realm.\n  const safeEvaluator = getSafeEvaluator(realmRec);\n  const functionEvaluator = getFunctionEvaluator(\n    realmRec.unsafeRec.unsafeFunction,\n    realmRec.unsafeRec.unsafeGlobal,\n    safeEvaluator\n  );\n\n  // Limitation: export a direct evaluator.\n  realmRec.safeEvaluators = { eval: safeEvaluator, Function: functionEvaluator };\n}\n\nfunction setDefaultBindings(realmRec) {\n  const intrinsics = realmRec.sharedIntrinsics;\n  const safeEvaluators = realmRec.safeEvaluators;\n  const descs = getStdLib(intrinsics, safeEvaluators);\n  defineProperties(realmRec.globalObject, descs);\n}\n\nexport default class Realm {\n  constructor(options) {\n    const O = this;\n    options = Object(options); // Todo: sanitize\n\n    if (options.thisValue !== undefined) {\n      throw new TypeError('Realm only supports undefined thisValue.');\n    }\n\n    let unsafeRec;\n    if (\n      options.intrinsics === 'inherit' &&\n      options.isDirectEval === 'inherit' &&\n      options.transform === 'inherit'\n    ) {\n      // In \"inherit\" mode, we create a compartment realm and inherit\n      // the context since we share the intrinsics. We create a new\n      // set to allow us to define eval() and Function() for the realm.\n\n      // Class constructor only has a [[Construct]] behavior and not\n      // a call behavior, therefore the use of \"this\" cannot be bound\n      // by an adversary.\n      unsafeRec = RealmProto2UnsafeRec.get(getPrototypeOf(this));\n    } else if (\n      options.intrinsics === undefined &&\n      options.isDirectEval === undefined &&\n      options.transform === undefined\n    ) {\n      // When intrinics are not provided, we create a root realm\n      // using the fresh set of new intrinics from a new context.\n      unsafeRec = createUnsafeRec(); // this repairs the constructors too\n      createRealmFacade(unsafeRec, Realm);\n    } else {\n      // note this would leak the parent TypeError, from which the child can\n      // access .prototype and the parent's intrinsics, except that the Realm\n      // facade catches all errors and translates them into local Error types\n      throw new TypeError('Realm only supports undefined or \"inherited\" intrinsics.');\n    }\n    const sharedIntrinsics = getSharedIntrinsics(unsafeRec.unsafeGlobal);\n    const globalObj = getGlobalObject(sharedIntrinsics);\n\n    const realmRec = {\n      unsafeRec,\n      sharedIntrinsics,\n      globalObject: globalObj,\n      safeEvaluators: undefined\n    };\n    Realm2RealmRec.set(O, realmRec);\n\n    createEvaluators(realmRec);\n    setDefaultBindings(realmRec);\n  }\n  get intrinsics() {\n    const O = this;\n    if (typeof O !== 'object') throw new TypeError();\n    if (!Realm2RealmRec.has(O)) throw new TypeError();\n    const realmRec = Realm2RealmRec.get(O);\n    const intrinsics = realmRec.sharedIntrinsics;\n    // The object returned has its prototype\n    // match the ObjectPrototype of the realm.\n    const obj = create(intrinsics.ObjectPrototype);\n    return assign(obj, intrinsics);\n  }\n  get global() {\n    const O = this;\n    if (typeof O !== 'object') throw new TypeError();\n    if (!Realm2RealmRec.has(O)) throw new TypeError();\n    const realmRec = Realm2RealmRec.get(O);\n    return realmRec.globalObject;\n  }\n  evaluate(x) {\n    const O = this;\n    if (typeof O !== 'object') throw new TypeError();\n    if (!Realm2RealmRec.has(O)) throw new TypeError();\n    const realmRec = Realm2RealmRec.get(O);\n    const evaluator = realmRec.safeEvaluators.eval;\n    return evaluator(`${x}`);\n  }\n  static makeRootRealm() {\n    return new Realm();\n  }\n  static makeCompartment() {\n    return new Realm({\n      transform: 'inherit',\n      isDirectEval: 'inherit',\n      intrinsics: 'inherit'\n    });\n  }\n}\n\nRealmProto2UnsafeRec.set(Realm.prototype, getCurrentUnsafeRec());\n\ndefineProperty(Realm.prototype, Symbol.toStringTag, {\n  value: 'function Realm() { [shim code] }',\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n","// Declare shorthand functions. Sharing these declarations accross modules\n// improves both consitency and minification. Unused declarations are dropped\n// by the tree shaking process.\n\nexport const {\n  assign,\n  create,\n  defineProperties,\n  freeze,\n  getOwnPropertyDescriptors,\n  getOwnPropertyNames\n} = Object;\n\nexport const {\n  apply,\n  defineProperty,\n  deleteProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  ownKeys,\n  setPrototypeOf\n} = Reflect;\n\nexport const objectHasOwnProperty = Object.prototype.hasOwnProperty;\n","export class Handler {\n  // Properties stored on the handler\n  // are not available from the proxy.\n\n  constructor(unsafeRec) {\n    this.unsafeGlobal = unsafeRec.unsafeGlobal;\n    this.unsafeEval = unsafeRec.unsafeGlobal.eval;\n\n    // this flag allow us to determine if the eval() call is a controlled\n    // eval done by the realm's code or if it is user-land invocation, so\n    // we can react differently.\n    this.useUnsafeEvaluator = false;\n  }\n\n  get(target, prop) {\n    // Special treatment for eval.\n    if (prop === 'eval') {\n      if (this.useUnsafeEvaluator) {\n        this.useUnsafeEvaluator = false;\n        return this.unsafeEval;\n      }\n      return target.eval;\n    }\n    // Properties of the global.\n    if (prop in target) {\n      return target[prop];\n    }\n    // Prevent the lookup for other properties.\n    return undefined;\n  }\n\n  has(target, prop) {\n    if (prop === 'eval') {\n      return true;\n    }\n    if (prop === 'arguments') {\n      return false;\n    }\n    if (prop in target) {\n      return true;\n    }\n    if (prop in this.unsafeGlobal) {\n      return true;\n    }\n    return false;\n  }\n}\n"],"names":["Array","isArray","contains","Error","join","unsafeFunction","unsafeRec","globalObject","Proxy","scopedEvaluatorFactory","eval","useUnsafeEvaluator","call","unsafeGlobal","prototype","Symbol","toStringTag","value","writable","enumerable","configurable","pop","includes","SyntaxError","length","Object","__defineGetter__","get","__defineSetter__","set","__lookupGetter__","__lookupSetter__","unsafeEval","name","constructor","global","Function","Infinity","NaN","undefined","iterator","Map","Set","String","Int8Array","ArrayBuffer","ArrayBufferPrototype","ArrayIteratorPrototype","ArrayPrototype","ArrayProto_entries","entries","ArrayProto_foreach","forEach","ArrayProto_keys","ArrayProto_values","values","AsyncFunctionPrototype","AsyncGeneratorPrototype","AsyncIteratorPrototype","Boolean","BooleanPrototype","DataView","DataViewPrototype","Date","DatePrototype","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","ErrorPrototype","EvalError","EvalErrorPrototype","Float32Array","Float32ArrayPrototype","Float64Array","Float64ArrayPrototype","FunctionPrototype","GeneratorPrototype","Int8ArrayPrototype","Int16Array","Int16ArrayPrototype","Int32Array","Int32ArrayPrototype","isFinite","isNaN","IteratorPrototype","JSON","JSONParse","parse","MapIteratorPrototype","MapPrototype","Math","Number","NumberPrototype","ObjectPrototype","ObjProto_toString","toString","ObjProto_valueOf","valueOf","parseFloat","parseInt","Promise","Promise_all","all","Promise_reject","reject","Promise_resolve","resolve","PromiseProto_then","then","PromisePrototype","RangeError","RangeErrorPrototype","ReferenceError","ReferenceErrorPrototype","Reflect","RegExp","RegExpPrototype","SetIteratorPrototype","SetPrototype","StringIteratorPrototype","StringPrototype","SymbolPrototype","SyntaxErrorPrototype","ThrowTypeError","TypedArray","TypedArrayPrototype","TypeError","TypeErrorPrototype","Uint8Array","Uint8ArrayPrototype","Uint8ClampedArray","Uint8ClampedArrayPrototype","Uint16Array","Uint16ArrayPrototype","Uint32Array","Uint32ArrayPrototype","URIError","URIErrorPrototype","WeakMap","WeakMapPrototype","WeakSet","WeakSetPrototype","escape","unescape","Intl","Realm","safeEvaluators","sharedIntrinsics","assign","create","defineProperties","freeze","getOwnPropertyDescriptors","getOwnPropertyNames","apply","defineProperty","deleteProperty","getOwnPropertyDescriptor","getPrototypeOf","ownKeys","setPrototypeOf","has","exports","module","require","runInNewContext","document","createElement","style","display","body","appendChild","contentWindow","message","construct","intrinsics","evaluate","makeRootRealm","makeCompartment","transform","isDirectEval","thisValue"],"mappings":"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"}