{"version":3,"file":"realm-shim.min.js","sources":["../src/sanitize.js","../src/proxy.js","../src/evaluate.js","../src/evaluators.js","../src/sandbox.js","../src/intrinsics.js","../src/stdlib.js","../src/utils.js","../src/realm.js"],"sourcesContent":["// locking down the environment\nexport function sanitize(sandbox) {\n    const { confinedWindow: { Object: o } } = sandbox;\n    try {\n        // Fixing properties of Object to comply with strict mode\n        // and ES2016 semantics, we do this by redefining them while in 'use strict'\n        // https://tc39.github.io/ecma262/#sec-object.prototype.__defineGetter__\n        if (o === undefined) {\n            return;\n        }\n        o.defineProperty(o.prototype, '__defineGetter__', {\n            value: function (key, fn) {\n                return o.defineProperty(this, key, {\n                    get: fn\n                });\n            }\n        });\n        o.defineProperty(o.prototype, '__defineSetter__', {\n            value: function (key, fn) {\n                return o.defineProperty(this, key, {\n                    set: fn\n                });\n            }\n        });\n        o.defineProperty(o.prototype, '__lookupGetter__', {\n            value: function (key) {\n                var d, p = this;\n                while (p && (d = o.getOwnPropertyDescriptor(p, key)) === undefined) {\n                    p = o.getPrototypeOf(this);\n                }\n                return d ? d.get : undefined;\n            }\n        });\n        o.defineProperty(o.prototype, '__lookupSetter__', {\n            value: function (key) {\n                var d, p = this;\n                while (p && (d = o.getOwnPropertyDescriptor(p, key)) === undefined) {\n                    p = o.getPrototypeOf(this);\n                }\n                return d ? d.set : undefined;\n            }\n        });\n        // Immutable Prototype Exotic Objects\n        // https://github.com/tc39/ecma262/issues/272\n        o.seal(o.prototype);\n    } catch (ignore) {\n        // Ignored\n    }\n}","// this flag allow us to determine if the eval() call is a controlled eval done by the realm's code\n// or if it is user-land invocation, so we can react differently.\nlet isInternalEvaluation = false;\n\nexport function setInternalEvaluation() {\n    isInternalEvaluation = true;\n}\n\nexport function resetInternalEvaluation() {\n    isInternalEvaluation = false;\n}\n\nexport const proxyHandler = {\n    get(sandbox, propName) {\n        if (propName === 'eval' && isInternalEvaluation) {\n            resetInternalEvaluation();\n            return sandbox.confinedWindow.eval;\n        }\n        return sandbox.globalObject[propName];\n    },\n    set(sandbox, propName, newValue) {\n        sandbox.globalObject[propName] = newValue;\n        return true;\n    },\n    defineProperty(sandbox, propName, descriptor) {\n        Object.defineProperty(sandbox.globalObject, propName, descriptor);\n        return true;\n    },\n    deleteProperty(sandbox, propName) {\n        return Reflect.deleteProperty(sandbox.globalObject, propName);\n    },\n    has(sandbox, propName) {\n        if (propName === 'eval' && isInternalEvaluation) {\n            return true;\n        }\n        if (propName in sandbox.globalObject) {\n            return true;\n        } else if (propName in sandbox.confinedWindow) {\n            throw new ReferenceError(`${propName} is not defined. If you are using typeof ${propName}, you can change your program to use typeof global.${propName} instead`);\n        }\n        return false;\n    },\n    ownKeys(sandbox) {\n        return Object.getOwnPropertyNames(sandbox.globalObject);\n    },\n    getOwnPropertyDescriptor(sandbox, propName) {\n        return Object.getOwnPropertyDescriptor(sandbox.globalObject, propName);\n    },\n    isExtensible(sandbox) {\n        // TODO: can it becomes non-extensible?\n        return true;\n    },\n    getPrototypeOf(sandbox) {\n        return null;\n    },\n    setPrototypeOf(sandbox, prototype) {\n        return prototype === null ? true : false;\n    },\n};","import {\n    setInternalEvaluation,\n    resetInternalEvaluation,\n} from \"./proxy\";\n\nconst HookFnName = '$RealmEvaluatorIIFE$';\n\n// Wrapping the source with `with` statement creates a new lexical scope,\n// that can prevent access to the globals in the sandbox by shadowing them\n// via globalProxy.\nfunction addLexicalScopesToSource(sourceText) {\n    /**\n     * We use a `with` statement who uses `argments[0]`, which is the\n     * `sandbox.globalProxy` that implements the shadowing mechanism as well as access to\n     * any global variable.\n     * Aside from that, the `this` value in sourceText will correspond to `sandbox.thisValue`.\n     * We have to use `arguments` instead of naming them to avoid name collision.\n     */\n    // escaping backsticks to prevent leaking the original eval as well as syntax errors\n    sourceText = sourceText.replace(/\\`/g, '\\\\`');\n    return `\n        function ${HookFnName}() {\n            with(arguments[0]) {\n                return (function(){\n                    \"use strict\";\n                    return eval(\\`${sourceText}\\`);\n                }).call(this);\n            }\n        }\n    `;\n}\n\nfunction evalAndReturn(sourceText, sandbox) {\n    const { iframeDocument, confinedWindow } = sandbox;\n    const { body: iframeBody } = iframeDocument;\n    const script = iframeDocument.createElement('script');\n    script.type = 'text/javascript';\n    confinedWindow[HookFnName] = undefined;\n    script.appendChild(iframeDocument.createTextNode(sourceText));\n    iframeBody.appendChild(script);\n    iframeBody.removeChild(script);\n    const result = confinedWindow[HookFnName];\n    confinedWindow[HookFnName] = undefined;\n    return result;\n}\n\nexport function evaluate(sourceText, sandbox) {\n    if (!sourceText) {\n        return undefined;\n    }\n    sourceText = addLexicalScopesToSource(sourceText + '');\n    setInternalEvaluation();\n    const fn = evalAndReturn(sourceText, sandbox);\n    const result = fn.apply(sandbox.thisValue, [sandbox.globalProxy]);\n    resetInternalEvaluation();\n    return result;\n}","import { evaluate } from \"./evaluate\";\n\nfunction getEvalEvaluator(sandbox) {\n    const o = {\n        // trick to set the name of the function to \"eval\"\n        eval: function(sourceText) {\n            // console.log(`Shim-Evaluation: \"${sourceText}\"`);\n            return evaluate(sourceText, sandbox);\n        }\n    };\n    Object.setPrototypeOf(o.eval, sandbox.Function);\n    o.eval.toString = () => 'function eval() { [shim code] }';\n    return o.eval;\n}\n\nfunction getFunctionEvaluator(sandbox) {\n    const { confinedWindow } = sandbox;\n    const f = function Function(...args) {\n        // console.log(`Shim-Evaluation: Function(\"${args.join('\", \"')}\")`);\n        const sourceText = args.pop();\n        const fnArgs = args.join(', ');\n        return evaluate(`(function anonymous(${fnArgs}){\\n${sourceText}\\n}).bind(this)`, sandbox);\n    }\n    f.prototype = confinedWindow.Function.prototype;\n    Object.setPrototypeOf(f, f.prototype);\n    f.prototype.constructor = f;\n    f.toString = () => 'function Function() { [shim code] }';\n    return f;\n}\n\nexport function getEvaluators(sandbox) {\n    sandbox.Function = getFunctionEvaluator(sandbox);\n    sandbox.eval = getEvalEvaluator(sandbox);\n}","import { sanitize } from \"./sanitize\";\nimport { getEvaluators } from \"./evaluators\";\nimport { proxyHandler } from \"./proxy\";\n\nfunction createIframe() {\n    const el = document.createElement(\"iframe\");\n    el.style.display = \"none\";\n    // accessibility\n    el.title = \"script\";\n    el.setAttribute('aria-hidden', true);\n    document.body.appendChild(el);\n    return el;\n}\n\nexport function createSandbox() {\n    const iframe = createIframe();\n    const { contentDocument: iframeDocument, contentWindow: confinedWindow } = iframe;\n    const sandbox = {\n        iframe,\n        iframeDocument,\n        confinedWindow,\n        thisValue: undefined,\n        globalObject: undefined,\n        globalProxy: undefined,\n    };\n    sanitize(sandbox);\n    Object.assign(sandbox, getEvaluators(sandbox));\n    sandbox.globalProxy = new Proxy(sandbox, proxyHandler);\n    return sandbox;\n}\n\nexport function setSandboxGlobalObject(sandbox, globalObject, thisValue) {\n    sandbox.thisValue = thisValue;\n    sandbox.globalObject = globalObject;\n}","import Realm from \"./realm\";\n\nconst getProto = Object.getPrototypeOf;\nconst iteratorSymbol = (typeof Symbol && Symbol.iterator) || \"@@iterator\";\n\nexport function getIntrinsics(sandbox) {\n    const { confinedWindow: _ } = sandbox;\n    const anonymousArrayIteratorPrototype = getProto(_.Array(0)[iteratorSymbol]());\n    const anonymousStringIteratorPrototype = getProto(_.String()[iteratorSymbol]());\n    const anonymousIteratorPrototype = getProto(anonymousArrayIteratorPrototype);\n\n    const strictArgumentsGenerator = _.eval('(function*(){\"use strict\";yield arguments;})');\n    const anonymousGenerator = getProto(strictArgumentsGenerator);\n    const anonymousGeneratorPrototype = getProto(anonymousGenerator);\n    const anonymousGeneratorFunction = anonymousGeneratorPrototype.constructor;\n\n    return {\n        // %Array%\n        \"Array\": _.Array,\n        // %ArrayBuffer%\n        \"ArrayBuffer\": _.ArrayBuffer,\n        // %ArrayBufferPrototype%\n        \"ArrayBufferPrototype\": _.ArrayBuffer.prototype,\n        // %ArrayIteratorPrototype%\n        \"ArrayIteratorPrototype\": anonymousArrayIteratorPrototype,\n        // %ArrayPrototype%\n        \"ArrayPrototype\": _.Array.prototype,\n        // %ArrayProto_values%\n        \"ArrayProto_values\": _.Array.prototype.values,\n        // %Boolean%\n        \"Boolean\": _.Boolean,\n        // %BooleanPrototype%\n        \"BooleanPrototype\": _.Boolean.prototype,\n        // %DataView%\n        \"DataView\": _.DataView,\n        // %DataViewPrototype%\n        \"DataViewPrototype\": _.DataView.prototype,\n        // %Date%\n        \"Date\": _.Date,\n        // %DatePrototype%\n        \"DatePrototype\": _.Date.prototype,\n        // %decodeURI%\n        \"decodeURI\": _.decodeURI,\n        // %decodeURIComponent%\n        \"decodeURIComponent\": _.decodeURIComponent,\n        // %encodeURI%\n        \"encodeURI\": _.encodeURI,\n        // %encodeURIComponent%\n        \"encodeURIComponent\": _.encodeURIComponent,\n        // %Error%\n        \"Error\": _.Error,\n        // %ErrorPrototype%\n        \"ErrorPrototype\": _.Error.prototype,\n        // %eval%\n        \"eval\": sandbox.eval,\n        // %EvalError%\n        \"EvalError\": _.EvalError,\n        // %EvalErrorPrototype%\n        \"EvalErrorPrototype\": _.EvalError.prototype,\n        // %Float32Array%\n        \"Float32Array\": _.Float32Array,\n        // %Float32ArrayPrototype%\n        \"Float32ArrayPrototype\": _.Float32Array.prototype,\n        // %Float64Array%\n        \"Float64Array\": _.Float64Array,\n        // %Float64ArrayPrototype%\n        \"Float64ArrayPrototype\": _.Float64Array.prototype,\n        // %Function%\n        \"Function\": sandbox.Function,\n        // %FunctionPrototype%\n        \"FunctionPrototype\": _.Function.prototype,\n        // %Generator%\n        \"Generator\": anonymousGenerator,\n        // %GeneratorFunction%\n        \"GeneratorFunction\": anonymousGeneratorFunction,\n        // %GeneratorPrototype%\n        \"GeneratorPrototype\": anonymousGeneratorPrototype,\n        // %Int8Array%\n        \"Int8Array\": _.Int8Array,\n        // %Int8ArrayPrototype%\n        \"Int8ArrayPrototype\": _.Int8Array.prototype,\n        // %Int16Array%\n        \"Int16Array\": _.Int16Array,\n        // %Int16ArrayPrototype%,\n        \"Int16ArrayPrototype\": _.Int16Array.prototype,\n        // %Int32Array%\n        \"Int32Array\": _.Int32Array,\n        // %Int32ArrayPrototype%\n        \"Int32ArrayPrototype\": _.Int32Array.prototype,\n        // %isFinite%\n        \"isFinite\": _.isFinite,\n        // %isNaN%\n        \"isNaN\": _.isNaN,\n        // %IteratorPrototype%\n        \"IteratorPrototype\": anonymousIteratorPrototype,\n        // %JSON%\n        \"JSON\": _.JSON,\n        // %Map%\n        \"Map\": _.Map,\n        // %MapIteratorPrototype%\n        \"MapIteratorPrototype\": undefined,\n        // %MapPrototype%\n        \"MapPrototype\": _.Map.prototype,\n        // %Math%\n        \"Math\": _.Math,\n        // %Number%\n        \"Number\": _.Number,\n        // %NumberPrototype%\n        \"NumberPrototype\": _.Number.prototype,\n        // %Object%\n        \"Object\": _.Object,\n        // %ObjectPrototype%\n        \"ObjectPrototype\": _.Object.prototype,\n        // %ObjProto_toString%\n        \"ObjProto_toString\": _.Object.prototype.toString,\n        // %ObjProto_valueOf%\n        \"ObjProto_valueOf\": _.Object.prototype.valueOf,\n        // %parseFloat%\n        \"parseFloat\": _.parseFloat,\n        // %parseInt%\n        \"parseInt\": _.parseInt,\n        // %Promise%\n        \"Promise\": _.Promise,\n        // %PromisePrototype%\n        \"PromisePrototype\": _.Promise.prototype,\n        // %Proxy%\n        \"Proxy\": _.Proxy,\n        // %RangeError%\n        \"RangeError\": _.RangeError,\n        // %RangeErrorPrototype%\n        \"RangeErrorPrototype\": _.RangeError.prototype,\n        // %ReferenceError%\n        \"ReferenceError\": _.ReferenceError,\n        // %ReferenceErrorPrototype%\n        \"ReferenceErrorPrototype\": _.ReferenceError.prototype,\n        // %Reflect%\n        \"Reflect\": _.Reflect,\n        // %RegExp%\n        \"RegExp\": _.RegExp,\n        // %RegExpPrototype%\n        \"RegExpPrototype\": _.RegExp.prototype,\n        // %Set%\n        \"Set\": _.Set,\n        // %SetIteratorPrototype%\n        \"SetIteratorPrototype\": undefined,\n        // %SetPrototype%\n        \"SetPrototype\": _.Set.prototype,\n        // %String%\n        \"String\": _.String,\n        // %StringIteratorPrototype%\n        \"StringIteratorPrototype\": anonymousStringIteratorPrototype,\n        // %StringPrototype%\n        \"StringPrototype\": _.String.prototype,\n        // %Symbol%\n        \"Symbol\": _.Symbol,\n        // %SymbolPrototype%\n        \"SymbolPrototype\": _.Symbol.prototype,\n        // %SyntaxError%\n        \"SyntaxError\": _.SyntaxError,\n        // %SyntaxErrorPrototype%\n        \"SyntaxErrorPrototype\": _.SyntaxError.prototype,\n        // %ThrowTypeError%\n        \"ThrowTypeError\": undefined,\n        // %TypedArray%\n        \"TypedArray\": undefined,\n        // %TypedArrayPrototype%\n        \"TypedArrayPrototype\": undefined,\n        // %TypeError%\n        \"TypeError\": _.TypeError,\n        // %TypeErrorPrototype%\n        \"TypeErrorPrototype\": _.TypeError.prototype,\n        // %Uint8Array%\n        \"Uint8Array\": _.Uint8Array,\n        // %Uint8ArrayPrototype%\n        \"Uint8ArrayPrototype\": _.Uint8Array.prototype,\n        // %Uint8ClampedArray%\n        \"Uint8ClampedArray\": _.Uint8ClampedArray,\n        // %Uint8ClampedArrayPrototype%\n        \"Uint8ClampedArrayPrototype\": _.Uint8ClampedArray.prototype,\n        // %Uint16Array%\n        \"Uint16Array\": _.Uint16Array,\n        // %Uint16ArrayPrototype%\n        \"Uint16ArrayPrototype\": Uint16Array.prototype,\n        // %Uint32Array%\n        \"Uint32Array\": _.Uint32Array,\n        // %Uint32ArrayPrototype%\n        \"Uint32ArrayPrototype\": _.Uint32Array.prototype,\n        // %URIError%\n        \"URIError\": _.URIError,\n        // %URIErrorPrototype%\n        \"URIErrorPrototype\": _.URIError.prototype,\n        // %WeakMap%\n        \"WeakMap\": _.WeakMap,\n        // %WeakMapPrototype%\n        \"WeakMapPrototype\": _.WeakMap.prototype,\n        // %WeakSet%\n        \"WeakSet\": _.WeakSet,\n        // %WeakSetPrototype%\n        \"WeakSetPrototype\": _.WeakSet.prototype,\n\n        // TODO: Annex B\n        // TODO: other special cases\n\n        // ESNext\n        Realm, // intentionally passing around the Realm Constructor, which could be used as a side channel, but still!\n    };\n}","import { getIntrinsics } from \"./intrinsics\";\n\nexport function getStdLib(sandbox) {\n    const intrinsics = getIntrinsics(sandbox);\n    return {\n        Array: { value: intrinsics.Array },\n        ArrayBuffer: { value: intrinsics.ArrayBuffer },\n        Boolean: { value: intrinsics.Boolean },\n        DataView: { value: intrinsics.DataView },\n        Date: { value: intrinsics.Date },\n        decodeURI: { value: intrinsics.decodeURI },\n        decodeURIComponent: { value: intrinsics.decodeURIComponent },\n        encodeURI: { value: intrinsics.encodeURI },\n        encodeURIComponent: { value: intrinsics.encodeURIComponent },\n        Error: { value: intrinsics.Error },\n        eval: { value: intrinsics.eval },\n        EvalError: { value: intrinsics.EvalError },\n        Float32Array: { value: intrinsics.Float32Array },\n        Float64Array: { value: intrinsics.Float64Array },\n        Function: { value: intrinsics.Function },\n        Int8Array: { value: intrinsics.Int8Array },\n        Int16Array: { value: intrinsics.Int16Array },\n        Int32Array: { value: intrinsics.Int32Array },\n        isFinite: { value: intrinsics.isFinite },\n        isNaN: { value: intrinsics.isNaN },\n        JSON: { value: intrinsics.JSON },\n        Map: { value: intrinsics.Map },\n        Math: { value: intrinsics.Math },\n        Number: { value: intrinsics.Number },\n        Object: { value: intrinsics.Object },\n        parseFloat: { value: intrinsics.parseFloat },\n        parseInt: { value: intrinsics.parseInt },\n        Promise: { value: intrinsics.Promise },\n        Proxy: { value: intrinsics.Proxy },\n        RangeError: { value: intrinsics.RangeError },\n        ReferenceError: { value: intrinsics.ReferenceError },\n        Reflect: { value: intrinsics.Reflect },\n        RegExp: { value: intrinsics.RegExp },\n        Set: { value: intrinsics.Set },\n        String: { value: intrinsics.String },\n        Symbol: { value: intrinsics.Symbol },\n        SyntaxError: { value: intrinsics.SyntaxError },\n        TypeError: { value: intrinsics.TypeError },\n        Uint8Array: { value: intrinsics.Uint8Array },\n        Uint8ClampedArray: { value: intrinsics.Uint8ClampedArray },\n        Uint16Array: { value: intrinsics.Uint16Array },\n        Uint32Array: { value: intrinsics.Uint32Array },\n        URIError: { value: intrinsics.URIError },\n        WeakMap: { value: intrinsics.WeakMap },\n        WeakSet: { value: intrinsics.WeakSet },\n\n        // TODO: Annex B\n        // TODO: other special cases\n    };\n}","export function assert(condition) {\n    if (!condition) {\n        throw new Error();\n    }\n}\n\nexport function IsCallable(obj) {\n    return typeof obj === 'function';\n}","import { createSandbox, setSandboxGlobalObject } from \"./sandbox\";\nimport { evaluate } from \"./evaluate\";\nimport { getStdLib } from \"./stdlib\";\nimport { getIntrinsics } from \"./intrinsics\";\nimport { assert, IsCallable } from \"./utils\";\n\nconst RealmRecord = Symbol('Realm Slot');\nconst Intrinsics = Symbol('Intrinsics Slot');\nconst GlobalObject = Symbol('GlobalObject Slot');\nconst GlobalThisValue = Symbol('GlobalThisValue Slot');\nconst GlobalEnv = Symbol('GlobalEnv Slot');\nconst EvalHook = Symbol('EvalHook Slot');\nconst IsDirectEvalHook = Symbol('IsDirectEvalHook Slot');\nconst ImportHook = Symbol('ImportHook Slot');\nconst ImportMetaHook = Symbol('ImportMetaHook Slot');\nconst ShimSandbox = Symbol('Sandbox');\n\n// shim specific\nfunction getSandbox(realmRec) {\n    const sandbox = realmRec[ShimSandbox];\n    assert(typeof sandbox === 'object');\n    return sandbox;\n}\n\nfunction getCurrentRealmRecord() {\n    let realmRec = window[RealmRecord];\n    if (!realmRec) {\n        // this is an outer realm, and we should set up the RealmRecord\n        window[RealmRecord] = {\n            // TODO: mimic what the global realm record should have\n            // including default hooks, etc.\n        };\n    }\n    return realmRec;\n}\n\n// <!-- es6num=\"8.1.2.5\" -->\nfunction NewGlobalEnvironment(G, thisValue) {\n    // diverging from spec to accomodate the iframe as the lexical environment\n    // using a class for better debugability\n    class EnvironmentRecord {\n        constructor(/*globalObject*/) {\n            this[GlobalThisValue] = thisValue;\n        }\n    }\n    return new EnvironmentRecord(G);\n}\n\n// <!-- es6num=\"8.2.3\" -->\nfunction SetRealmGlobalObject(realmRec, globalObj, thisValue) {\n    if (globalObj === undefined) {\n        const intrinsics = realmRec[Intrinsics];\n        globalObj = Object.create(intrinsics['ObjectPrototype']);\n    }\n    assert(typeof globalObj === 'object');\n    if (thisValue === undefined) thisValue = globalObj;\n    realmRec[GlobalObject] = globalObj;\n    const newGlobalEnv = NewGlobalEnvironment(globalObj, thisValue);\n    realmRec[GlobalEnv] = newGlobalEnv;\n    return realmRec;\n}\n\n// <!-- es6num=\"8.2.4\" -->\nfunction SetDefaultGlobalBindings(realmRec) {\n    const global = realmRec[GlobalObject];\n    // For each property of the Global Object specified in clause <emu-xref href=\"#sec-global-object\"></emu-xref>, do\n    // ---> diverging:\n    const GlobalObjectDescriptors = getStdLib(realmRec[ShimSandbox]);\n    Object.defineProperties(global, GlobalObjectDescriptors);\n    return global;\n}\n\n// <!-- es6num=\"8.2.2\" -->\nfunction CreateIntrinsics(realmRec) {\n    // ---> diverging\n    let intrinsics = getIntrinsics(realmRec[ShimSandbox]);\n    realmRec[Intrinsics] = intrinsics;\n    return intrinsics;\n}\n\nfunction CreateRealmRec(intrinsics) {\n    let realmRec = /* new Realm Record from table-21 */ {\n        [Intrinsics]: {},\n        [GlobalObject]: undefined,\n        [GlobalEnv]: undefined,\n        // [TemplateMap]: [],\n        // [HostDefined]: undefined,\n        [EvalHook]: undefined,\n        [IsDirectEvalHook]: undefined,\n        [ImportHook]: undefined,\n        [ImportMetaHook]: undefined,\n        // ---> diverging to create the internal shim iframe\n        [ShimSandbox]: createSandbox(),\n    };\n    if (intrinsics === undefined) {\n        CreateIntrinsics(realmRec);\n    } else {\n        // 1. Assert: In this case, _intrinsics_ must be a Record with field names listed in column one of Table 7.\n        realmRec[Intrinsics] = intrinsics;\n    }\n    return realmRec;\n}\n\nfunction InvokeDirectEvalHook(realmRec, x) {\n    // 1. Assert: realm is a Realm Record.\n    const fn = realmRec[EvalHook];\n    if (fn === undefined) return x;\n    assert(IsCallable(fn) === true);\n    return fn.call(undefined, x);\n}\n\n// <!-- es6num=\"18.2.1.1\" -->\nfunction PerformEval(x, evalRealm, strictCaller, direct) {\n    assert(direct === false ? strictCaller === false : true);\n    // realm spec segment begins\n    if (direct === true) {\n        x = InvokeDirectEvalHook(x, evalRealm);\n    }\n    // realm spec segment ends\n    if (typeof x !== 'string') return x;\n    // ---> diverging\n    const sandbox = getSandbox(evalRealm);\n    return evaluate(x, sandbox);\n}\n\nexport default class Realm {\n\n    constructor(options) {\n        const O = this;\n        const parentRealm = getCurrentRealmRecord();\n        const opts = Object(options);\n        let importHook = opts.importHook;\n        if (importHook === \"inherit\") {\n            importHook = parentRealm[ImportHook];\n        } else if (importHook !== undefined && IsCallable(importHook) === false) throw new TypeError();\n        let importMetaHook  = opts.importMetaHook;\n        if (importMetaHook === \"inherit\") {\n            importMetaHook = parentRealm[ImportMetaHook];\n        } else if (importMetaHook !== undefined && IsCallable(importMetaHook) === false) throw new TypeError();\n        let evalHook = opts.evalHook;\n        if (evalHook === \"inherit\") {\n            evalHook = parentRealm[EvalHook];\n        } else if (evalHook !== undefined && IsCallable(evalHook) === false) throw new TypeError();\n        let isDirectEvalHook = opts.isDirectEvalHook;\n        if (isDirectEvalHook === \"inherit\") {\n            isDirectEvalHook = parentRealm[IsDirectEvalHook];\n        } else if (isDirectEvalHook !== undefined && IsCallable(isDirectEvalHook) === false) throw new TypeError();\n        let intrinsics = opts.intrinsics;\n        if (intrinsics === \"inherit\") {\n            intrinsics = parentRealm[Intrinsics];\n        } else if (intrinsics !== undefined) throw new TypeError();\n        let thisValue = opts.thisValue;\n        if (thisValue !== undefined && typeof thisValue !== \"object\") throw new TypeError();\n        const realmRec = CreateRealmRec(intrinsics);\n        O[RealmRecord] = realmRec;\n        SetRealmGlobalObject(realmRec, undefined, thisValue);\n        if (importHook === undefined) {\n            // new built-in function object as defined in <emu-xref href=\"#sec-realm-default-import-hook-functions\"></emu-xref>\n            importHook = function (/*referrer, specifier*/) {\n                throw new TypeError();\n            }\n        }\n        realmRec[ImportHook] = importHook;\n        if (evalHook !== undefined) {\n            realmRec[EvalHook] = evalHook;\n        }\n        if (isDirectEvalHook !== undefined) {\n            realmRec[IsDirectEvalHook] = isDirectEvalHook;\n        }\n        let init = O.init;\n        if (!IsCallable(init)) throw new TypeError();\n        init.call(O);\n        // ---> diverging\n        setSandboxGlobalObject(realmRec[ShimSandbox], realmRec[GlobalObject], realmRec[GlobalEnv][GlobalThisValue]);\n    }\n\n    init() {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        SetDefaultGlobalBindings(O[RealmRecord]);\n    }\n\n    eval(x) {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        let evalRealm = O[RealmRecord];\n        // HostEnsureCanCompileStrings(the current Realm Record, _evalRealm_).\n        return PerformEval(x, evalRealm, false, false);\n    }\n\n    get stdlib() {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        // TODO: align with spec\n        const sandbox = getSandbox(O[RealmRecord]);\n        return getStdLib(sandbox);\n    }\n\n    get intrinsics() {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        // TODO: align with spec\n        const sandbox = getSandbox(O[RealmRecord]);\n        return getIntrinsics(sandbox.confinedWindow);\n    }\n\n    get global() {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        return O[RealmRecord][GlobalObject];\n    }\n\n    get thisValue() {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        let envRec = O[RealmRecord][GlobalEnv];\n        return envRec[GlobalThisValue];\n    }\n\n}\n\nRealm.toString = () => 'function Realm() { [shim code] }';"],"names":["sanitize","sandbox","o","confinedWindow","Object","undefined","defineProperty","prototype","key","fn","this","d","p","getOwnPropertyDescriptor","getPrototypeOf","get","set","seal","ignore","setInternalEvaluation","resetInternalEvaluation","addLexicalScopesToSource","sourceText","replace","HookFnName","evalAndReturn","iframeDocument","iframeBody","body","script","createElement","type","appendChild","createTextNode","removeChild","result","evaluate","apply","thisValue","globalProxy","getEvalEvaluator","setPrototypeOf","eval","Function","toString","getFunctionEvaluator","f","args","pop","join","constructor","getEvaluators","createIframe","el","document","style","display","title","setAttribute","createSandbox","iframe","contentDocument","contentWindow","assign","Proxy","proxyHandler","setSandboxGlobalObject","globalObject","getIntrinsics","_","anonymousArrayIteratorPrototype","getProto","Array","iteratorSymbol","anonymousStringIteratorPrototype","String","anonymousIteratorPrototype","strictArgumentsGenerator","anonymousGenerator","anonymousGeneratorPrototype","anonymousGeneratorFunction","ArrayBuffer","values","Boolean","DataView","Date","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","Error","EvalError","Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","isFinite","isNaN","JSON","Map","Math","Number","valueOf","parseFloat","parseInt","Promise","RangeError","ReferenceError","Reflect","RegExp","Set","Symbol","SyntaxError","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakSet","getStdLib","intrinsics","value","assert","condition","IsCallable","obj","getSandbox","realmRec","ShimSandbox","getCurrentRealmRecord","window","RealmRecord","NewGlobalEnvironment","G","GlobalThisValue","SetRealmGlobalObject","globalObj","Intrinsics","create","GlobalObject","newGlobalEnv","GlobalEnv","SetDefaultGlobalBindings","global","GlobalObjectDescriptors","defineProperties","CreateIntrinsics","CreateRealmRec","EvalHook","IsDirectEvalHook","ImportHook","ImportMetaHook","InvokeDirectEvalHook","x","call","PerformEval","evalRealm","strictCaller","direct","isInternalEvaluation","propName","newValue","descriptor","deleteProperty","getOwnPropertyNames","iterator","Realm","options","O","parentRealm","opts","importHook","importMetaHook","evalHook","isDirectEvalHook","init"],"mappings":"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"}